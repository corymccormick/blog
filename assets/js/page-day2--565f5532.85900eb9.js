(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{482:function(t,e,n){"use strict";n.r(e);var a=n(2),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"day-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day-2"}},[t._v("#")]),t._v(" day 2")]),t._v(" "),n("h2",{attrs:{id:"intro-to-js-javascript-functions-and-answer-the-following-questions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-js-javascript-functions-and-answer-the-following-questions"}},[t._v("#")]),t._v(" Intro to JS > JavaScript Functions and answer the following questions")]),t._v(" "),n("ol",[n("li",[t._v("What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")])]),t._v(" "),n("p",[t._v("-One way to write a function is through declaration. This method acts differently from others in that it is hoisted allowing it to be used before being defined.\n-another is by a function expression, assigning a function equal to a variable.This acts differntly in that it is not hoisted and cannot be used undefined\n-the third way to write a function is by arrow function expression. the difference in this method is that it does not create its own this value")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("What is the difference between Parameters and Arguments?")])]),t._v(" "),n("p",[t._v("Parameters are used for defining a function, while arguments are values used to invoke a function.")]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("What are higher order functions? Can you provide an example?")])]),t._v(" "),n("p",[t._v("A higher order function is when a function accepts another function as a parameter.an example could be using array.push method within another function.")]),t._v(" "),n("p",[t._v("Afternoon Challenge: https://corymccormick.github.io/js-test-loops-and-arrays/")])])}),[],!1,null,null,null);e.default=i.exports}}]);