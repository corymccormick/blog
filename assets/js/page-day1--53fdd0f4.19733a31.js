(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{481:function(e,t,a){"use strict";a.r(t);var s=a(2),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-1"}},[e._v("#")]),e._v(" day 1")]),e._v(" "),a("h1",{attrs:{id:"intro-to-js-var-let-and-const-and-answer-the-following-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-js-var-let-and-const-and-answer-the-following-questions"}},[e._v("#")]),e._v(" # Intro to JS > Var, let and const and answer the following questions")]),e._v(" "),a("ol",[a("li",[e._v("What is Scope ?")])]),e._v(" "),a("p",[e._v("Scope is the space in code where a variable are defined and useable.")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[e._v("What is Hoisting ?\nHoisting is when variables and function declarations are moved to the top of their scope before code execution.")])]),e._v(" "),a("li",[a("p",[e._v("In what cases might you use let vs const vs var?")])])]),e._v(" "),a("p",[e._v("-I might use Let in the case I would need to redefine a variable such as in a loop"),a("br"),e._v("\n-Use const in a case where the variable will not need to be redeclared, possibly in the case of creating an object\n-use var in a case that you need to declare a variable that is within global scope")]),e._v(" "),a("p",[e._v("Afternoon challenge: https://corymccormick.github.io/js-tests-basic/")])])}),[],!1,null,null,null);t.default=n.exports}}]);