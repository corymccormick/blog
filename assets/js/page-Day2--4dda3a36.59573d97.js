(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{493:function(e,s,t){"use strict";t.r(s);var a=t(2),o=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"day-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-2"}},[e._v("#")]),e._v(" Day 2")]),e._v(" "),t("h2",{attrs:{id:"asynchronous-code-javascript-promises-and-answer-the-following-questions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-code-javascript-promises-and-answer-the-following-questions"}},[e._v("#")]),e._v(" Asynchronous Code > JavaScript Promises and answer the following questions")]),e._v(" "),t("ol",[t("li",[e._v("What are the three states of a Promise?")])]),e._v(" "),t("p",[e._v("The three states of a promise are pending- the intial state before the promise succeds or fails, resolved- a completed promise, and rejected- a failed promise.")]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[e._v('How do promises seek to resolve the issues of "callback hell"?\nPromises may seek to resolve these issues with chaining which makes for a cleaner and easier to read code.')])]),e._v(" "),t("li",[t("p",[e._v("What is the difference between .then() and .catch()?\nthe difference between these two methods is the then is called after a resolved promise. While a catch method is for rejected promises.")])])]),e._v(" "),t("p",[e._v("Afternoon Challenge:\nhttps://corymccormick.github.io/gregslist/")])])}),[],!1,null,null,null);s.default=o.exports}}]);